# version: "3"
# services:
#   zookeeper:
#     image: bitnami/zookeeper:latest
#     ports:
#       - "2181:2181"
#     environment:
#       - "ALLOW_ANONYMOUS_LOGIN=yes"
#   kafka:
#     image: bitnami/kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       - KAFKA_BROKER_ID=1
#       - KAFKA_LISTENERS=PLAINTEXT://:9092
#       - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
#       - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#       - ALLOW_PLAINTEXT_LISTENER=yes
#     depends_on:
#       - zookeeper

version: "3"
services:
  zookeeper:
    ports:
      - "50000:2181"
    image: zookeeper:3.5.9
  kafka:
    ports:
      - "50001:9092"
      - "50002:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CREATE_TOPICS: "web-events-topic:1:1"
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal # change to 172.17.0.1 if running on Ubuntu
    image: "wurstmeister/kafka:2.13-2.8.1"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  api:
    ports:
      - "3000:8080"
    depends_on:
      - kafka
    build:
      context: ./api
  microservice:
    depends_on:
      - kafka
    build:
      context: ./microservice
volumes: {}
